<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAHBQX/CAYF/woGBv8KBgX/DAgH/wgGBf8QDg3/EA0M/w8JCP8eEgr/KRsN/ygaDP8dEg3/Gw8L/yMV
        DP8qGwv/NiQL/zAgC/8cDwz/GRAN/yESCv8tHQr/KhsL/xgMBv8NCgb/DQoG/xAMCP8TDgv/DgsH/w4K
        B/8NCgf/DAkF/woGBv8LBwb/CgYG/wwHB/8OCgn/BwUE/xQREP8QDQ3/EQkG/x0RCf8uHQr/MyIN/ykb
        D/8iEwn/LR0N/zgmD/9DLg7/OygN/yQWC/8gEwr/Lx4K/zonCv8vHgn/GxAJ/w4JBv8OCgX/FAwG/w8L
        CP8SCQb/DwgF/wwJBv8KBwP/DAkI/wwIB/8NCQf/CgcG/xEIB/8PCAb/CgUF/w8JB/8UDAj/IhMI/zMi
        Cv8/Kwz/OCYO/y4dDf82JQ3/Qi0Q/083Ef9HMRD/LyEN/zEiDf9BLQ3/STMP/zMhCv8gFQ7/Fw4K/yAV
        C/8XCwT/Gg4G/xkMBv8QCgf/DgkG/wwJBf8JBwb/DgoJ/wwIBv8QCAb/DwcG/xsNBv8ZDQf/GA0J/xsQ
        Cv8lFwr/OScO/0w0EP9JMxH/OikP/zwpB/9OOhL/ZlIn/1hFHP87Kwz/Qi4P/1U+Ff9SOxL/MiEK/x0R
        B/8jFgn/KhoK/yUWB/8nFwf/GQ0H/xILCP8QCwj/DQoH/w0KCf8TDgz/DQgG/xMNCf8cDwj/HhAI/y4d
        C/8jFAj/JRYJ/yocDP8+LBH/UjsU/15GHf9NORL/ZFU8/21XVP9qUFX/bVVW/2lcT/9aSR//Z0oY/1U9
        Ff8yIQr/KBoI/zckCf8zIQj/NiQJ/yYWB/8cEQr/DgkG/w8KB/8QDQn/DgoI/w8KB/8SDAn/EwsG/xsP
        B/8qGgr/Lx8J/zwqDf81Iwv/OCcP/0EvE/9XQRf/cFgk/3llU/9aOkv/TzFD/0glNf9BGy//SBg0/3lZ
        Xv92YC//UjcP/zgmDv9BLQz/RzIM/0cyCf85Jgf/JBUH/xELB/8NCQb/DQoF/xEOCv8NCAb/EQ0H/xgV
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>